name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  buildAndTest:
    strategy:
      fail-fast: false
      matrix:
        operating-system:
          - ubuntu-latest
        php-versions:
          - '8.0'
    runs-on: '${{ matrix.operating-system }}'
    name: 'Unit Testing / PHP ${{ matrix.php-versions }} @ ${{ matrix.operating-system }}'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      -
                name: 'Setup cache environment'
                id: cache-env
                uses: shivammathur/cache-extensions@v1
                with:
                    php-version: '${{ matrix.php-versions }}'
                    extensions: '${{ env.php_extensions }}'
                    key: '${{ env.key }}'
      -
        name: 'Cache extensions'
        uses: actions/cache@v1
        with:
          path: '${{ steps.cache-env.outputs.dir }}'
          key: '${{ steps.cache-env.outputs.key }}'
          restore-keys: '${{ steps.cache-env.outputs.key }}'
      -
        name: 'Setup PHP'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '${{ matrix.php-versions }}'
          extensions: '${{ env.php_extensions }}'
          ini-values: 'date.timezone=UTC, upload_max_filesize=20M, post_max_size=20M, memory_limit=512M, short_open_tag=Off'
          coverage: xdebug
          tools: 'cs2pr, php-cs-fixer, phpstan, phpunit'
      -
        name: 'Setup problem matchers for PHP (aka PHP error logs)'
        run: 'echo "::add-matcher::${{ runner.tool_cache }}/php.json"'
      -
        name: 'Setup problem matchers for PHPUnit'
        run: 'echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"'
      -
        name: 'Get Composer cache directory'
        id: composer-cache
        run: 'echo "::set-output name=dir::$(composer config cache-files-dir)"'
        working-directory: '${{env.working_directory}}'
      -
        name: 'Cache dependencies'
        uses: actions/cache@v1
        with:
          path: '${{ steps.composer-cache.outputs.dir }}'
          key: '${{ runner.os }}-composer-${{ hashFiles(''**/composer.lock'') }}'
          restore-keys: '${{ runner.os }}-composer-'
      -
        name: 'Validate composer.json and composer.lock'
        run: 'composer validate'
        working-directory: '${{env.working_directory}}'
      -
        name: 'Install PHP dependencies with Composer'
        run: 'composer install --prefer-dist --no-progress --no-suggest --optimize-autoloader'
        working-directory: '${{env.working_directory}}'
      -
        name: 'Create PostgreSQL Database'
        run: 'php bin/console doctrine:database:create --if-not-exists'
        working-directory: '${{env.working_directory}}'
      -
        name: 'Migrate PostgreSQL Database Schema'
        run: 'php bin/console doctrine:migrations:migrate -n || echo "No migrations found or migration failed"'
        working-directory: '${{env.working_directory}}'
      -
        name: 'Load PostgreSQL Database Fixtures'
        run: 'php bin/console doctrine:fixtures:load -n'
        working-directory: '${{env.working_directory}}'
      -
        name: 'Run Unit Tests with PHPUnit'
        run: 'php vendor/bin/codecept run'
        working-directory: '${{env.working_directory}}'
